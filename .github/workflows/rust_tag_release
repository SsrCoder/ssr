name: Rust Tag Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  cross_build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        # 定义要通过 cross 交叉编译的平台
        target:
          - x86_64-unknown-linux-gnu  # Linux x86_64
          - aarch64-unknown-linux-gnu # Linux ARM64
          - armv7-unknown-linux-gnueabihf # Linux ARMv7
          - x86_64-pc-windows-gnu     # Windows (GCC toolchain)
          - x86_64-unknown-linux-musl  # Linux x86_64 (Musl)
          - aarch64-unknown-linux-musl # Linux ARM64 (Musl)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      # 1. 安装 cross
      - name: Install cross
        run: cargo install cross

      # 2. 使用 cross 编译
      - name: Build with cross for ${{ matrix.target }}
        run: cross build --release --target ${{ matrix.target }}
      
      # 3. 打包和上传二进制文件
      - name: Package and upload artifact
        uses: actions/upload-artifact@v4
        with:
          # cross 编译的二进制文件也位于 target/<TARGET>/release/ 目录
          path: target/${{ matrix.target }}/release/*
          name: ${{ matrix.target }}
